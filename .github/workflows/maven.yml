name: Maven Build

on:
  workflow_dispatch:  # Permite ejecutar manualmente el workflow
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:  # Add GITHUB_TOKEN here to make it available to all steps in the job
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

       # Step 4: Build, Test, and Package with Maven
      - name: Build with Maven
        run: mvn clean package
        
      # Step 5: Verify TXT file existence
      - name: Verify TXT file existence
        run: |
          if ls target/*.txt 1> /dev/null 2>&1; then
            echo "TXT file exists"
          else
            echo "No TXT files found in target/"; exit 1
          fi

      # Step6: Upload TXT artifact          
      - name: Upload TXT artifact
        uses: actions/upload-artifact@v3
        with:
          name: txtfile  #nombre del artefacto
          path: target/*.txt # ruta del artefacto
          
      # Step 7: Run Sonatype IQ Server Evaluate Action
      - name: Run Evaluate Action
        id: evaluate
        uses: sonatype/actions/evaluate@v1.3.0
        with:
          iq-server-url: https://89f6b2432597.ngrok.app
          username: ${{ secrets.IQ_USERNAME }}
          password: ${{ secrets.IQ_PSWRD}}
          application-id: JavaTestApp1
          scan-targets: '**/*.jar'